# LangChain Runnable 프로토콜 정리


## 1. Runnable 프로토콜이란?

- LangChain의 거의 모든 컴포넌트(프롬프트, 모델, 체인 등)에 구현된 **표준 실행 인터페이스**
- 동일한 방식으로 호출 가능 (`invoke`, `batch`, `stream`)
- 동기(synchronous)와 비동기(asynchronous) 방식을 모두 지원

---

## 2. 주요 메서드

### 🔹 동기 메서드
- **`invoke(input)`** → 단일 입력 실행
- **`batch(inputs)`** → 여러 입력 동시에 실행
- **`stream(input)`** → 모델 출력 토큰을 스트리밍

### 🔹 비동기 메서드
- **`ainvoke(input)`** → 비동기 단일 입력 실행  
- **`abatch(inputs)`** → 비동기 다중 입력 실행  
- **`astream(input)`** → 비동기 토큰 스트리밍  
- **`astream_log(input)`** → **중간 단계까지 포함**하여 스트리밍  

---

## 3. 동기 vs 비동기 차이

| 구분 | 동기(Sync) | 비동기(Async) |
| --- | --- | --- |
| 실행 방식 | 결과가 나올 때까지 기다림 | 기다리는 동안 다른 작업도 가능 |
| Python 사용 | 일반 함수 호출 | `async/await` 필요 |
| 사용 예시 | 단일 요청 처리 | 대량 요청, 웹 서버, 채팅 서비스 |
| 코드 예 | `chain.invoke()` | `await chain.ainvoke()` |

---

## 4. 코드 예시

```python
# 동기 실행
result = chain.invoke({"text": "Hello"})
print(result)

# 비동기 실행
import asyncio
async def main():
    result = await chain.ainvoke({"text": "Hello"})
    print(result)

asyncio.run(main())